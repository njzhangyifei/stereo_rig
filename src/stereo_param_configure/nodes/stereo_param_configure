#!/usr/bin/env python
"""
File: stereorig_web_reconfigure.py
Author: Yifei Zhang
Email: njzhangyifei@gmail.com
Github: https://github.com/njzhangyifei
Description: a ROS node that converts messages into IDS camera parameters
"""

PACKAGE = 'stereo_param_configure'

import rospy
from std_msgs.msg import Float64, Int32, Bool
import dynamic_reconfigure.client
import stereo_param_configure.stereoparam

"""
@type STEREO_PARAM : stereo_param_configure.stereoparam.StereoParam
"""
STEREO_PARAM = None

def callback_auto_exposure(data):
    """callback for auto exposure
    :data : data field in standard message
    """
    STEREO_PARAM.set_auto_exposure(data.data)
    rospy.loginfo("Auto Exposure changed to %s", "TRUE" if data.data else "FALSE")

def callback_exposure(data):
    """callback for exposure
    :data : data field in standard message
    """
    STEREO_PARAM.set_exposure_time(data.data)
    rospy.loginfo("Exposure changed to %d", data.data)

def callback_auto_gain(data):
    """callback for auto gain
    :data : data field in standard message
    """
    STEREO_PARAM.set_auto_gain(data.data)
    rospy.loginfo("Auto Gain changed to %s", "TRUE" if data.data else "FALSE")

def callback_gain(data):
    """callback for gain
    :data : data field in standard message
    """
    STEREO_PARAM.set_gain(data.data)
    rospy.loginfo("Gain changed to %d", data.data)

def callback_config(config):
    """callback for dynamic reconfigure client
    :config : the configuration set
    """
    callback_string = ', '.join("[{!s} : {!r}]".format(key, val) \
            for (key, val) in config.items())
    rospy.logdebug("Configuration changed to %s", callback_string)

def listener():
    """register the node as subscriber to topics
    """
    global STEREO_PARAM
    rospy.init_node('stereo_param_reconfigure')
    rospy.loginfo('Trying to connect to ueye node')
    try:
        client = dynamic_reconfigure.client.Client('ueye'\
            , timeout=10, config_callback=callback_config)
    except:
        rospy.logfatal('Failed to register as a client, Exiting')
        return
    STEREO_PARAM = stereo_param_configure.stereoparam.StereoParam(client)
    rospy.loginfo('Stereo Rig uEye Reconfigure node up and running')
    rospy.Subscriber("exposure", Float64, callback_exposure)
    rospy.Subscriber("auto_exposure", Bool, callback_auto_exposure)
    rospy.Subscriber("gain", Int32, callback_gain)
    rospy.Subscriber("auto_gain", Bool, callback_auto_gain)
    rospy.spin()

if __name__ == '__main__':
    listener()
